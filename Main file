import mediacloud
import datetime
import unittest

pip install mediacloud


# Verify that we can open and read the election results CSV correctly
# Showing a "test-driven" style

from mediacloud import Results
import unittest
 
'''
Module showing how doctests can be included with source code
Each '>>>' line is run as if in a python shell, and counts as a test.
The next line, if not '>>>' is the expected output of the previous line.
If anything doesn't match exactly (including trailing spaces), the test fails.
'''
 
class unnecessary_math: 
    def multiply(a, b):

    >>> multiply(4, 3)
    12
    >>> multiply('a', 3)
    'aaa'
    
    
    return a * b

python -m doctest <file>

from unnecessary_math import multiply

class TestUM(unittest.TestCase):
 
    def setUp(self):
        pass
 
    def test_numbers_3_4(self):
        self.assertEqual( multiply(3,4), 12)
 
    def test_strings_a_3(self):
        self.assertEqual( multiply('a',3), 'aaa')
 
if __name__ == '__main__':
    unittest.main()
    

# if this file is run directly, run the tests
if __name__ == "__main__":
    unittest.main()
